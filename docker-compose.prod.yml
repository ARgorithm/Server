# Sets up multiple services to demonstrate how a server cluster would run with cloud storage, authorization, caching and monitoring
# This file requires the existense of .env with neccessary variable
# The docker-compose file is added for emulation of how the application can be setup with full functionality
version: "3"
services:
    mongodb:
        image: mongo
        ports: 
            - 27017:27017
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${DB_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            - mongo-data:/data/db
        logging:
            driver: none
    redis:
        image: redis
        ports:
            - 6379:6379
        volumes:
            - ./redis.conf:/usr/local/etc/redis/redis.conf
        command: redis-server /usr/local/etc/redis/redis.conf
        logging:
            driver: none
    arserver:
        image: alanjohn/argorithm-server:latest
        ports: 
            - 80:80
        environment:
            - DATABASE=MONGO
            - AUTH=ENABLED
            - SECRET_KEY=${SECRET_KEY}
            - DB_USERNAME=${DB_USERNAME}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_ENDPOINT=mongodb
            - DB_PORT=27017
            - ADMIN_EMAIL=${ADMIN_EMAIL}
            - ADMIN_PASSWORD=${ADMIN_PASSWORD}
            - CACHING=ENABLED
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD=notmypassword
        volumes:
            - uploads:/tmp/argorithm
        depends_on:
            - mongodb
            - redis
    prometheus:
        image: prom/prometheus
        ports:
        - 9090:9090
        command:
        - --config.file=/etc/prometheus/prometheus.yml
        volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
        - ./alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
        depends_on:
        - arserver
    grafana:
        image: grafana/grafana
        ports:
        - 3000:3000
        volumes:
        - ./grafana/datasource.yml:/etc/grafana/provisioning/datasource.yml
        env_file:
        - ./grafana/config.monitoring
        depends_on:
        - prometheus
        logging:
            driver: none
    alertmanager:
        image: prom/alertmanager
        ports:
        - 9093:9093
        command:
        - --config.file=/etc/alertmanager.yml
        volumes:
        - ./alertmanager.yml:/etc/alertmanager.yml
        depends_on:
        - arserver
volumes:
    mongo-data:
        driver: local
    uploads:
        driver: local
